{"version":3,"sources":["components/Filter/Filter.module.css","components/PhonebookItem/BookItem.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/actions.js","redux/contacts-operations.js","components/ContactForm/InputForm.js","components/Filter/Filter.js","components/PhonebookItem/PhoneBookItem.js","redux/contacts-selector.js","components/PhonebookList/PhonebookList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/InputForm.module.css"],"names":["module","exports","Container","children","className","s","container","addContactRequest","createAction","addContactSuccess","addContactError","deleteItem","changeFilter","axios","defaults","baseURL","data","dispatch","contacts","name","number","actions","post","then","catch","error","connect","state","items","onFormSubmit","contactOperations","useState","setName","setNumber","contactId","useRef","uuidv4","inputValue","e","target","value","formReset","inputContainer","form","onSubmit","preventDefault","some","contact","alert","formItem","type","pattern","title","required","onChange","button","filter","onChangeFilter","filterAction","currentTarget","inputFilter","PhoneListItem","id","onDeleteList","list","onClick","getVisibleContacts","getContacts","normalizedFilter","getFilter","toLowerCase","includes","PhonebookList","useSelector","useDispatch","map","PhoneBookItem","App","createReducer","action","payload","loading","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.945e812c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__wl4CB\",\"inputFilter\":\"Filter_inputFilter__1xs7g\",\"title\":\"Filter_title__K4ewl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"BookItem_list__112z4\",\"button\":\"BookItem_button__28zA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1hu1V\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactRequest = createAction('contact/addContactRequest');\r\nconst addContactSuccess = createAction('contact/addContactSuccess');\r\nconst addContactError = createAction('contact/addContactError');\r\n\r\nconst deleteItem = createAction('contact/delete');\r\n\r\nconst changeFilter = createAction('filter/change');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { \r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteItem, \r\n    changeFilter };\r\n","import axios  from \"axios\";\r\nimport actions from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:7777';\r\n\r\nconst addContact = data => dispatch => {\r\n    const contacts = { name:data.name, number: data.number };\r\n\r\n    dispatch(actions.addContactRequest);\r\n    \r\n    axios\r\n    .post('/contacts', contacts)\r\n    .then(({ data }) => \r\n     dispatch(actions.addContactSuccess(data)))\r\n     .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    addContact,\r\n}\r\n\r\n","import { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactOperations from \"../../redux/contacts-operations\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./InputForm.module.css\";\n\n function Input({ onFormSubmit, contacts }) {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactId = useRef(uuidv4());\n\n   const inputValue = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n            default:\n              return;\n    }\n  };\n\n   const addContact = (e) => {\n    e.preventDefault();\n    const newContact = contacts.some((contact) => contact.name === name)\n    if (newContact) {\n        alert(`${name} is already in contacts`);\n        formReset();\n        return;\n      }\n      onFormSubmit({ name: name, number: number, contactId: contactId});\n      formReset();\n  };\n\n   const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <div className={s.inputContainer}>\n        <form className={s.form} onSubmit={addContact}>\n          <label className={s.formItem}>\n            Name{\" \"}\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={inputValue}\n            />\n          </label>\n          <label className={s.formItem}>\n            Number{\" \"}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={inputValue}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n })\n\nconst mapDispatchToProps = dispatch => ({\n  onFormSubmit: data => dispatch(contactOperations.addContact(data)), \n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\n\nInput.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport filterAction from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.filter}>\n      <p className={s.title}>Find contacts by name </p>\n\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(filterAction.changeFilter(e.currentTarget.value)),\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./BookItem.module.css\";\n\nconst PhoneListItem = ({ id, name, number, onDeleteList }) => {\n  return (\n    <li className={s.list} key={id}>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <button className={s.button} onClick={() => onDeleteList(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhoneListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n\nexport default PhoneListItem;\n"," export const getContacts = state => state.contacts.items;\r\n export const getFilter = state => state.contacts.filter;\r\n \r\n export const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };","import React from \"react\";\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport  deleteItem  from '../../redux/actions';\nimport PhoneBookItem from \"../PhonebookItem/PhoneBookItem\";\nimport { getVisibleContacts } from \"../../redux/contacts-selector\";\n// import PropTypes from \"prop-types\";\n\nconst PhonebookList = ({ title }) => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteList = id => dispatch(deleteItem.deleteItem(id));\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <PhoneBookItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteList={() => onDeleteList(id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nexport default PhonebookList;\n\n// ***\n// const getVisibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// const mapStateToProps = (state) => {\n//  const { filter, items } = state.contacts;\n//  const visibleContacts = getVisibleContacts(items, filter);\n\n//  return {\n//   contacts: visibleContacts,\n//  }\n// }\n  \n// const mapDispatchToProps = dispatch => ({\n//   onDeleteList: (id) => dispatch(deleteItem.deleteItem(id))\n// })\n\n// PhonebookList.propTypes = {\n//   contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   title: PropTypes.string.isRequired,\n//   onDeleteList: PropTypes.func.isRequired,\n// };\n\n  \n// export default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","import Container from \"./components/Container/Container\";\nimport Input from \"./components/ContactForm/InputForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport PhonebookList  from \"./components/PhonebookList/PhonebookList\";\n\n  function App() {\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Input />\n        <Filter />\n        <PhonebookList\n          title=\"Contacts\"\n        />\n      </Container>\n    );\n}\n\nexport default App;\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst { \r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteItem, \r\n    changeFilter} = actions;\r\n\r\nconst items = createReducer([], {\r\n    [addContactSuccess]: (state, action) => [...state, action.payload],\r\n    [deleteItem]: (state, action) => \r\n    state.filter(contact => contact.id !== action.payload)\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n})\r\n  \r\n\r\n//   const filter = (state = '', { type, payload }) => {\r\n//     switch(type) {\r\n//         case 'filter/change':\r\n//             return payload;\r\n\r\n//             default:\r\n//                 return state;\r\n//     }\r\n// }\r\n\r\n//   const items = (state = [], { type, payload }) => {\r\n//       switch (type) {\r\n//           case types.ADD_CONTACT:\r\n//               return [...state, payload ];\r\n\r\n//               case types.DELETE_ITEM:\r\n//                   return state.filter(contact => contact.id !== payload);\r\n\r\n//               default:\r\n//                   return state;\r\n//       }\r\n//   }\r\n\r\n","// import { combineReducers } from \"redux\";\r\nimport { configureStore,getDefaultMiddleware, combineReducers } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport { \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n } from 'redux-persist';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from \"./reducer\";\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n  }\r\n}), logger];\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default store;\r\n\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"InputForm_inputContainer__3lQ5_\",\"form\":\"InputForm_form__1kQ7C\",\"formItem\":\"InputForm_formItem__39Fab\",\"button\":\"InputForm_button__g5cbp\"};"],"sourceRoot":""}